/*
 * This file was automatically generated by EvoSuite
 * Thu Sep 02 14:30:36 GMT 2021
 */

package evosuite.com.flysky.study.mybatis.common;

import com.flysky.study.mybatis.common.BaseEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Date;

import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true)
public class BaseEntity_ESTest extends BaseEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      MockDate mockDate0 = new MockDate(0, 39, 39, (-356), 0, 39);
      baseEntity0.setStartTime(mockDate0);
      Date date0 = baseEntity0.getStartTime();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(0);
      baseEntity0.setPageSize(integer0);
      Integer integer1 = baseEntity0.getPageSize();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(789);
      baseEntity0.setPageSize(integer0);
      Integer integer1 = baseEntity0.getPageSize();
      assertEquals(789, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer((-896));
      baseEntity0.setPageSize(integer0);
      Integer integer1 = baseEntity0.getPageSize();
      assertEquals((-896), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(1513);
      baseEntity0.setPageNum(integer0);
      Integer integer1 = baseEntity0.getPageNum();
      assertEquals(1513, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(0);
      baseEntity0.setPageNum(integer0);
      Integer integer1 = baseEntity0.getPageNum();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer((-901));
      baseEntity0.setPageNum(integer0);
      Integer integer1 = baseEntity0.getPageNum();
      assertEquals((-901), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      BaseEntity baseEntity1 = baseEntity0.setOrderBy("");
      String string0 = baseEntity1.getOrderBy();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      MockDate mockDate0 = new MockDate(125, 125, (-1));
      BaseEntity baseEntity1 = baseEntity0.setEndTime(mockDate0);
      Date date0 = baseEntity1.getEndTime();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setOrderBy("BaseEntity{pageNum=null, pageSize=null, orderBy='null', startTime=null, endTime=null}");
      String string0 = baseEntity0.getOrderBy();
      assertEquals("BaseEntity{pageNum=null, pageSize=null, orderBy='null', startTime=null, endTime=null}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.toString();
      assertEquals("BaseEntity{pageNum=null, pageSize=null, orderBy='null', startTime=null, endTime=null}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.getOrderBy();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = baseEntity0.getPageSize();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Date date0 = baseEntity0.getStartTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Date date0 = baseEntity0.getEndTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = baseEntity0.getPageNum();
      assertNull(integer0);
  }
}
